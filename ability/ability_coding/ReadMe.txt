Wolfram的代码许多只是简单的函数，有的函数包写得太急太多的时候，离线的代码，在不必要进行优化的情况下，以功能快速实现为主，
并没有去过多进行优化和优雅性的东西，只是说明一下工作量，有些重复的代码等并未做一些清理，所以这里无需用代码质量来评价。
它里面有些科学和算法的计算逻辑是非常复杂的，核心难点在那里，有些脚本的功能，一般达到性能够用也无所谓了。

python、linux、VIM、shell、bat、lua、c\c++、spark、mapreduce、mongodb、sql、redis、hive...
python早年折腾环境，包括上线都不用anaconda的，比只会anaconda的要强。
linux一般要管理许多台机器，包括测试环境等
shell要写许多脚本等进行定时任务等
julia,scala

学术方向的话，实现算法等比较简单，随便什么代码都可以。
工作中，简单的有需要的或必要的基本都会学一下。
有些特别的要专门花时间的，以这个吃饭的系统得写的，比如java这种做线上业务开发的除外。
但是有需要写java算法等又完全不是问题。

coding sample的pdf文件太大了，提交太慢，不如使用网盘链接，待更新。
也不是必要的，我只是为了让人印象深刻。